services:
  # Laravel Service
  laravel:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    container_name: app_laravel
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./laravel:/var/www/html
    networks:
      - app-network
    depends_on:
      - mysql
      - redis

  # React Service
  react:
    build:
      context: ./reactjs
      dockerfile: Dockerfile
    container_name: app_react
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./reactjs:/app
      - /app/node_modules
    networks:
      - app-network

  # NestJS Service
  nestjs:
    build:
      context: ./nestjs
      dockerfile: Dockerfile
    container_name: app_nestjs
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - ./nestjs:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - mysql
      - mongodb

  # Angular Service
  angular:
    build:
      context: ./angular
      dockerfile: Dockerfile
    container_name: app_angular
    restart: unless-stopped
    ports:
      - "4200:80"
    volumes:
      - ./angular:/app
      - /app/node_modules
    networks:
      - app-network

  # MySQL Service
  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    container_name: app_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: database
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  # PostgreSQL Service
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: app_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # MongoDB Service
  mongodb:
    build:
      context: ./mongodb
      dockerfile: Dockerfile
    container_name: app_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: admin
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  # Nginx Service (para Laravel)
  nginx:
    image: nginx:alpine
    container_name: app_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./laravel:/var/www/html
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network
    depends_on:
      - laravel

  # Redis Service
  redis:
    image: redis:alpine
    container_name: app_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  mysql_data:
    driver: local
  postgres_data:
    driver: local
  mongodb_data:
    driver: local 